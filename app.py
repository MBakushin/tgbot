import telebot
import os
from dotenv import load_dotenv
from config import common_valuta, all_valuta
from extensions import ExchangeRates, ConverterError


load_dotenv()
TOKEN = os.getenv("TOKEN")

if __name__ == "__main__":
    bot = telebot.TeleBot(TOKEN)


    @bot.message_handler(commands=["start", "help"])
    def echo_test(message: telebot.types.Message):
        text = """ü§ñ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ 
–∫–æ–º–∞–Ω–¥—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:
<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã> <–∏—Å—Ö–æ–¥–Ω–∞—è –≤–∞–ª—é—Ç–∞> 
<–≤–∞–ª—é—Ç–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏>
–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç - 
–≤–≤–µ–¥–∏—Ç–µ /valuta.
–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–º–µ—é—â–∏—Ö—Å—è –≤–∞–ª—é—Ç - 
–≤–≤–µ–¥–∏—Ç–µ /allvaluta"""
        bot.reply_to(message, text)


    @bot.message_handler(commands=["allvaluta"])
    def get_all_values(message: telebot.types.Message):
        text = "–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:"
        for key, value in all_valuta.items():
            text = "\n".join((text, f"{key}: {value}"))
        bot.reply_to(message, text)


    @bot.message_handler(commands=["valuta"])
    def get_common_values(message: telebot.types.Message):
        text = "–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –≤–∞–ª—é—Ç—ã:"
        for key, value in common_valuta.items():
            text = "\n".join((text, f"{key}: {value}"))
        bot.reply_to(message, text)


    @bot.message_handler(content_types=["text"])
    def convert(message: telebot.types.Message):
        try:
            amount, base, quote = message.text.split()
            if not float(amount):
                raise ValueError
            elif base.upper() not in all_valuta.keys():
                raise ConverterError("–ù–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—É—é –≤–∞–ª—é—Ç—É\n")
            elif quote.upper() not in all_valuta.keys():
                raise ConverterError("–ù–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞–ª—é—Ç—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏\n")
        except ValueError:
            bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö\n"
                                              "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
        except ConverterError as e:
            bot.send_message(message.chat.id, f"{e}–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
        else:
            converting = ExchangeRates().convert(quote, base, amount)
            bot.send_message(message.chat.id, converting or "–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")


    bot.polling(non_stop=True)
